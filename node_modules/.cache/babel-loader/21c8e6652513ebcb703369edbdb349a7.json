{"ast":null,"code":"var _jsxFileName = \"/Users/ryanfallon/Documents/git/calendar-example/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { setSelectionRange } from '@testing-library/user-event/dist/utils';\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [date, setDate] = useState(new Date());\n  const fromdt = new Date(\"2022-03-22\");\n  const todt = new Date(\"2022-03-27\");\n  var img = document.createElement(\"img\");\n  img.src = \"bluebox.png\";\n  var src = document.getElementById(\"x\");\n  src.appendChild(img);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Where The F@ck is Ryan?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        tileContent: _ref => {\n          let {\n            date,\n            view\n          } = _ref;\n          return view === 'month' && date >= fromdt && date <= todt ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: \"background-image: url('bluebox.png');\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 97\n          }, this) : null;\n        } //tileContent={({ date, view }) => view === 'month' && date >= fromdt && date <= todt ? <p><img id=\"x\" src=\"bluebox.png\" alt=\"France!\"/></p> : null}\n        // onChange={setDate}\n        // value={date}\n        ,\n        selectRange: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), date.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: \"Start:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), ' ', date[0].toDateString(), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: \"End:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), \" \", date[1].toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: \"Default selected date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), ' ', date.toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ryanfallon/Documents/git/calendar-example/src/App.js"],"names":["setSelectionRange","useState","Calendar","App","date","setDate","Date","fromdt","todt","img","document","createElement","src","getElementById","appendChild","view","length","toDateString"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,wCAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CAAhC;AACA,QAAMC,MAAM,GAAE,IAAID,IAAJ,CAAS,YAAT,CAAd;AACA,QAAME,IAAI,GAAE,IAAIF,IAAJ,CAAS,YAAT,CAAZ;AAEA,MAAIG,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AAEAF,EAAAA,GAAG,CAACG,GAAJ,GAAU,aAAV;AACA,MAAIA,GAAG,GAAGF,QAAQ,CAACG,cAAT,CAAwB,GAAxB,CAAV;AAEAD,EAAAA,GAAG,CAACE,WAAJ,CAAgBL,GAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,WAAW,EAAE;AAAA,cAAC;AAAEL,YAAAA,IAAF;AAAQW,YAAAA;AAAR,WAAD;AAAA,iBAAoBA,IAAI,KAAK,OAAT,IAAoBX,IAAI,IAAIG,MAA5B,IAAsCH,IAAI,IAAII,IAA9C,gBAAqD;AAAG,YAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,kBAArD,GAA0G,IAA9H;AAAA,SADf,CAEE;AACA;AACA;AAJF;AAKE,QAAA,WAAW,EAAE;AALf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAWGJ,IAAI,CAACY,MAAL,GAAc,CAAd,gBACC;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EACuC,GADvC,EAEGZ,IAAI,CAAC,CAAD,CAAJ,CAAQa,YAAR,EAFH,4BAIE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,OAIsCb,IAAI,CAAC,CAAD,CAAJ,CAAQa,YAAR,EAJtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAQC;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EACuD,GADvD,EAEGb,IAAI,CAACa,YAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAvCQd,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import { setSelectionRange } from '@testing-library/user-event/dist/utils';\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\n\nfunction App() {\n  const [date, setDate] = useState(new Date());\n  const fromdt= new Date(\"2022-03-22\");\n  const todt= new Date(\"2022-03-27\");\n\n  var img = document.createElement(\"img\"); \n \n  img.src = \"bluebox.png\"; \n  var src = document.getElementById(\"x\"); \n \n  src.appendChild(img); \n\n  return (\n    <div className='app'>\n      <h1 className='text-center'>Where The F@ck is Ryan?</h1>\n      <div className='calendar-container'>\n        <Calendar\n          tileContent={({ date, view }) => view === 'month' && date >= fromdt && date <= todt ? <p style=\"background-image: url('bluebox.png');\"/> : null}\n          //tileContent={({ date, view }) => view === 'month' && date >= fromdt && date <= todt ? <p><img id=\"x\" src=\"bluebox.png\" alt=\"France!\"/></p> : null}\n          // onChange={setDate}\n          // value={date}\n          selectRange={true}\n        />\n      </div>\n      {date.length > 0 ? (\n        <p className='text-center'>\n          <span className='bold'>Start:</span>{' '}\n          {date[0].toDateString()}\n          &nbsp;|&nbsp;\n          <span className='bold'>End:</span> {date[1].toDateString()}\n        </p>\n      ) : (\n        <p className='text-center'>\n          <span className='bold'>Default selected date:</span>{' '}\n          {date.toDateString()}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}